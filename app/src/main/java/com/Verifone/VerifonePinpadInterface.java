/*
 * *
 *  * Created by Gerardo Ruiz on 12/16/20 4:41 PM
 *  * Copyright (c) 2020 . All rights reserved.
 *  * Last modified 12/10/20 12:25 AM
 *
 */

package com.Verifone;

/**
 * Type: Interface.
 * Parent: VerifonePinpadInterface.java.
 * Name: VerifonePinpadInterface.
 */
public interface VerifonePinpadInterface {

    /**
     * The constant MSG_Z4.
     */
    byte[] MSG_Z4 = new byte[]{0x5A, 0x34, (byte) 0xC1, 0x01, 0x10};

    /**
     * The constant MSG_Z2.
     */
    byte[] MSG_Z2 = new byte[]{

            0x02, 0x5A, 0x32, 0x1A, 0x52, 0x65, 0x73, 0x74, 0x2E, 0x20, 0x54, 0x6F, 0x6B, 0x73, 0x03, 0x6C

    };

    /**
     * The constant MSG_72.
     */
    byte[] MSG_72 = new byte[]{0x02, 0x37, 0x32, 0x03, 0x06};

    /**
     * The constant MSG_Z10.
     */
    byte[] MSG_Z10 = new byte[]{

            0x2, 0x5A, 0x31, 0x30, 0x03, 0x58

    };

    /**
     * The constant MSG_Z11.
     */
    byte[] MSG_Z11 = new byte[]{

            0x02, 0x5A, 0x31, 0x31

    };

    byte[] ACK = new byte[]{
            0x06
    };

    /**
     * The constant COM_03.
     */
    byte[] COM_03 = new byte[]{

            0x03

    };

    /**
     * The constant MSG_Q8.
     */
    byte[] MSG_Q8 = new byte[]{0x51, 0x38};

    /**
     * The constant MSG_Q2.
     */
    byte[] MSG_Q2 = new byte[]{0x51, 0x32};

    /**
     * The constant MSG_C25.
     */
    byte[] MSG_C25 = new byte[]{0x43, 0x32, 0x35, 0x37, 0x30, 0x31};

    /**
     * The constant MSG_C12.
     */
    byte[] MSG_C12 = new byte[]{0x43, 0x31, 0x32, 0x37};

    /**
     * The constant MSG_C51_CANCEL.
     */
    byte[] MSG_C51_CANCEL = new byte[]{(byte) 0xC1, 0x01, 0x01};

    /**
     * The constant MSG_C51_TEST.
     */
    byte[] MSG_C51_TEST = new byte[]{
            0x43, 0x35, 0x31, 0x00, 0x4A,
            (byte) 0xC1, 0x01, 0x10,
            (byte) 0xC1, 0x03, 0x05, 0x12, 0x30,
            (byte) 0xC1, 0x03, 0x06, 0x40, 0x49,
            (byte) 0xC1, 0x01, 0x01,
            (byte) 0xC1, 0x04, 0x00, 0x00, 0x04,
            (byte) 0xD2,
            (byte) 0xC1, 0x04, 0x00, 0x00, 0x00, 0x00,
            (byte) 0xC1, 0x02, 0x04, (byte) 0x84, (byte) 0xC1, 0x01, 0x00,
            (byte) 0xE1, 0x27, 0x5F, 0x2A, (byte) 0x82, (byte) 0x84, (byte) 0x95, (byte) 0x9A, (byte) 0x9C, (byte) 0x9F, 0x02,
            (byte) 0x9F, 0x03, (byte) 0x9F, 0x09, (byte) 0x9F, 0x10, (byte) 0x9F, 0x1A, (byte) 0x9F, 0x1E, (byte) 0x9F, 0x26,
            (byte) 0x9F, 0x27, (byte) 0x9F, 0x33, (byte) 0x9F, 0x34, (byte) 0x9F, 0x35, (byte) 0x9F, 0x36, (byte) 0x9F, 0x37,
            (byte) 0x9F, 0x41, (byte) 0x9F, 0x53, (byte) 0x9F, 0x6E
    };

    /**
     * The constant MSG_C51.
     */
    byte[] MSG_C51 = new byte[]{
            0x02,
            0x43, 0x35, 0x31,                               // tipo de mensaje
            0x00, 0x4A,                                     // longitud  0x4C    0x4A
            //3     4
            (byte) 0xC1, 0x01, 0x30,                         // timeout
            (byte) 0xC1, 0x03, 0x05, 0x12, 0x30,             // fecha
            //10    11    12
            (byte) 0xC1, 0x03, 0x06, 0x34, 0x0D,             // hora
            (byte) 0xC1, 0x01, 0x07,                         // txn type 20  //comentado
            //(byte)0xC1, 0x01, 0x07,
            (byte) 0xC1, 0x04, 0x00, 0x00, 0x07, (byte) 0x08, // monto    0x04, (byte)0xD2
            (byte) 0xC1, 0x04, 0x00, 0x00, 0x00, 0x00,       // fijo
            (byte) 0xC1, 0x02, 0x04, (byte) 0x84,             // fijo (moneda MXN)
            (byte) 0xC1, 0x01, 0x00,                         // merchant desition
            (byte) 0xE1, 0x25, (byte) 0x5F, 0x2A, (byte) 0x82, (byte) 0x84, (byte) 0x95, (byte) 0x9A, (byte) 0x9C, (byte) 0x9F,
            (byte) 0x02, (byte) 0x9F, 0x03, (byte) 0x9F, 0x09, (byte) 0x9F, 0x10, (byte) 0x9F, 0x1A, (byte) 0x9F, 0x1E, (byte) 0x9F,
            0x26, (byte) 0x9F, 0x27, (byte) 0x9F, 0x33, (byte) 0x9F, 0x34, (byte) 0x9F, 0x35, (byte) 0x9F, 0x36, (byte) 0x9F,
            0x37, (byte) 0x9F, 0x41, (byte) 0x9F, 0x53 //(byte)0x9F, 0x6E
            , 0x03
    };

    /**
     * The constant MSG_C51_REFOUND.
     */
    byte[] MSG_C51_REFOUND = new byte[]{
            0x02,
            0x43, 0x35, 0x31,                               // tipo de mensaje
            0x00, 0x4A,                                     // longitud  0x4C    0x4A
            //3     4
            (byte) 0xC1, 0x01, 0x30,                         // timeout
            (byte) 0xC1, 0x03, 0x05, 0x12, 0x30,             // fecha
            //10    11    12
            (byte) 0xC1, 0x03, 0x06, 0x34, 0x0D,             // hora
            (byte) 0xC1, 0x01, 0x17,                         // txn type 20  //comentado
            //(byte)0xC1, 0x01, 0x07,
            (byte) 0xC1, 0x04, 0x00, 0x00, 0x07, (byte) 0x08, // monto    0x04, (byte)0xD2
            (byte) 0xC1, 0x04, 0x00, 0x00, 0x00, 0x00,       // fijo
            (byte) 0xC1, 0x02, 0x04, (byte) 0x84,             // fijo (moneda MXN)
            (byte) 0xC1, 0x01, 0x00,                         // merchant desition
            (byte) 0xE1, 0x25, (byte) 0x5F, 0x2A, (byte) 0x82, (byte) 0x84, (byte) 0x95, (byte) 0x9A, (byte) 0x9C, (byte) 0x9F,
            (byte) 0x02, (byte) 0x9F, 0x03, (byte) 0x9F, 0x09, (byte) 0x9F, 0x10, (byte) 0x9F, 0x1A, (byte) 0x9F, 0x1E, (byte) 0x9F,
            0x26, (byte) 0x9F, 0x27, (byte) 0x9F, 0x33, (byte) 0x9F, 0x34, (byte) 0x9F, 0x35, (byte) 0x9F, 0x36, (byte) 0x9F,
            0x37, (byte) 0x9F, 0x41, (byte) 0x9F, 0x53 //(byte)0x9F, 0x6E
            , 0x03
    };
    /**
     * The constant MSG_C51Tst.
     */

    byte[] MSG_C51Tst = new byte[]{
            0x02,
            0x43, 0x35, 0x31,                               // tipo de mensaje
            0x00, 0x4A,                                     // longitud  0x4C    0x4A
            //3     4
            (byte) 0xC1, 0x01, 0x10,                         // timeout
            (byte) 0xC1, 0x03, 0x19, 0x03, 0x06,             // fecha
            //10    11    12
            (byte) 0xC1, 0x03, 0x11, 0x34, 0x13,             // hora
            (byte) 0xC1, 0x01, 0x07,                         // txn type 20  //comentado
            //(byte)0xC1, 0x01, 0x07,
            (byte) 0xC1, 0x04, 0x00, 0x00, 0x0D, (byte) 0x48, // monto    0x04, (byte)0xD2
            (byte) 0xC1, 0x04, 0x00, 0x00, 0x00, 0x00,       // fijo
            (byte) 0xC1, 0x02, 0x04, (byte) 0x84,             // fijo (moneda MXN)
            (byte) 0xC1, 0x01, 0x00,                         // merchant desition
            //39
//0x25,
            (byte) 0xE1, 0x25, (byte) 0x5F, 0x2A, (byte) 0x82, (byte) 0x84, (byte) 0x95, (byte) 0x9A, (byte) 0x9C, (byte) 0x9F,
            (byte) 0x02, (byte) 0x9F, 0x03, (byte) 0x9F, 0x09, (byte) 0x9F, 0x10, (byte) 0x9F, 0x1A, (byte) 0x9F, 0x1E, (byte) 0x9F,
            0x26, (byte) 0x9F, 0x27, (byte) 0x9F, 0x33, (byte) 0x9F, 0x34, (byte) 0x9F, 0x35, (byte) 0x9F, 0x36, (byte) 0x9F,
            0x37, (byte) 0x9F, 0x41, (byte) 0x9F, 0x53//, (byte)0x9F, 0x6E
            , 0x03
            , 0x72
    };


    /**
     * The constant AUX.
     */
    byte[] AUX = new byte[]{
            0x43, 0x35, 0x33, 0x30, 0x30, 0x02, 0x13,
            (byte) 0xC1, 0x08, 0x41, 0x52, 0x31, 0x33, 0x01, (byte) 0x96, 0x32, (byte) 0x81,
            (byte) 0xC1, 0x1A,
            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
            0x20, 0x20, 0x20, 0x20,
            (byte) 0xC1, 0x00,
            (byte) 0xC1, 0x00,
            (byte) 0xC1, 0x00,
            (byte) 0xC1, 0x02, 0x30, 0x35,
            (byte) 0xE1, 0x5F, 0x4F, 0x07, (byte) 0xA0, 0x00, 0x00, 0x00, 0x03, 0x20, 0x10,
            (byte) 0x9F, 0x12, 0x0D, 0x42, 0x41, 0x4E, 0x43, 0x4F, 0x4D, 0x45, 0x52,
            0x20, 0x56, 0x49, 0x53, 0x41, 0x50, 0x0D, 0x56, 0x49, 0x53, 0x41,
            0x20, 0x45, 0x4C, 0x45, 0x43, 0x54, 0x52, 0x4F, 0x4E, 0x5F, 0x30,
            0x02, 0x00,
            0x00, 0x5F, 0x34, 0x01, 0x01,
            (byte) 0x9F, 0x34, 0x03, 0x01, 0x03, 0x02,
            (byte) 0xC2, 0x01, 0x00,
            (byte) 0x95, 0x05, (byte) 0x80, (byte) 0x80, 0x00, (byte) 0x80, 0x00,
            (byte) 0x9F, 0x27, 0x01, (byte) 0x80,
            (byte) 0x9F, 0x26, 0x08, (byte) 0xCA, 0x7A, 0x5F, (byte) 0xA7, (byte) 0xF8, 0x56, (byte) 0xFA, 0x22,
            (byte) 0x9B, 0x02, 0x68, 0x00,
            (byte) 0x9F, 0x39, 0x01, 0x05,
            (byte) 0x8A, 0x00,
            (byte) 0x99, 0x00,
            (byte) 0x9F, 0x6E, 0x00,
            (byte) 0xE2, (byte) 0x88,
            0x5F, 0x2A, 0x02, 0x04, (byte) 0x84,
            (byte) 0x82, 0x02, 0x1C, 0x00,
            (byte) 0x84, 0x07, (byte) 0xA0, 0x00, 0x00, 0x00, 0x03, 0x20, 0x10,
            (byte) 0x95, 0x05, (byte) 0x80, (byte) 0x80, 0x00, (byte) 0x80, 0x00,
            (byte) 0x9A, 0x03, 0x19, 0x03, 0x04,
            (byte) 0x9C, 0x01, 0x00,
            (byte) 0x9F, 0x02, 0x06, 0x00, 0x00, 0x00, 0x01, 0x40, 0x00,
            (byte) 0x9F, 0x03, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            (byte) 0x9F, 0x09, 0x02, 0x00, (byte) 0x8C,
            (byte) 0x9F, 0x10, 0x07, 0x06, 0x01, 0x0A, 0x03, (byte) 0xA4, 0x20, 0x00,
            (byte) 0x9F, 0x1A, 0x02, 0x04, (byte) 0x84,
            (byte) 0x9F, 0x1E, 0x08, 0x34, 0x30, 0x31, 0x34, 0x39, 0x31, 0x35, 0x32,
            (byte) 0x9F, 0x26, 0x08, (byte) 0xCA, 0x7A, 0x5F, (byte) 0xA7, (byte) 0xF8, 0x56, (byte) 0xFA, 0x22,
            (byte) 0x9F, 0x27, 0x01, (byte) 0x80,
            (byte) 0x9F, 0x33, 0x03, (byte) 0xE0, (byte) 0xB0, (byte) 0xC8,
            (byte) 0x9F, 0x34, 0x03, 0x01, 0x03, 0x02,
            (byte) 0x9F, 0x35, 0x01, 0x22,
            (byte) 0x9F, 0x36, 0x02, 0x01, (byte) 0xF7,
            (byte) 0x9F, 0x37, 0x04, (byte) 0xCC, 0x38, (byte) 0x83, 0x4B,
            (byte) 0x9F, 0x41, 0x04, 0x00, 0x00, 0x00, 0x12,
            (byte) 0x9F, 0x53, 0x01, 0x52,
            0x21, 0x20, 0x45, 0x53, 0x30, 0x30, 0x30, 0x36, 0x30,
            0x20, 0x56, 0x46, 0x65, 0x32, 0x38, 0x35, 0x76, 0x30, 0x38, 0x5F,
            0x31, 0x37, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x56, 0x46, 0x34,
            0x30, 0x31, 0x34, 0x39, 0x31, 0x35, 0x32, 0x33, 0x35, 0x30, 0x30,
            0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
            0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x21, 0x20, 0x52, 0x31, 0x30,
            0x30, 0x30, 0x30, 0x30, 0x20, 0x21, 0x20, 0x45, 0x5A, 0x30, 0x30,
            0x30, 0x39, 0x38, 0x20, 0x30, 0x31, 0x31, 0x30, 0x30, 0x30, 0x30,
            0x30, 0x30, 0x30, 0x31, 0x42, 0x35, 0x31, 0x30, 0x30, 0x30, 0x30,
            0x30, 0x41, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x39, 0x30, 0x30,
            0x31, 0x30, 0x35, 0x33, 0x37, 0x41, 0x30, 0x30, 0x30, 0x43, 0x34,
            0x37, 0x39, 0x35, 0x45, 0x36, 0x38, 0x33, 0x35, 0x35, 0x32, 0x38,
            0x41, 0x45, 0x37, 0x38, 0x34, 0x38, 0x39, 0x32, 0x31, 0x33, 0x42,
            0x33, 0x30, 0x41, 0x36, 0x46, 0x42, 0x36, 0x39, 0x43, 0x35, 0x39,
            0x35, 0x43, 0x45, 0x36, 0x37, 0x31, 0x42, 0x45, 0x32, 0x38, 0x45,
            0x46, 0x33, 0x33, 0x32, 0x38, 0x31, 0x41, 0x43, 0x41, 0x39, 0x39,
            0x42, 0x35, 0x42, 0x21, 0x20, 0x45, 0x59, 0x30, 0x30, 0x30, 0x30,
            0x30, 0x20, 0x21, 0x20, 0x43, 0x5A, 0x30, 0x30, 0x30, 0x34, 0x30,
            0x20, 0x30, 0x31, 0x46, 0x37, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x03, 0x49
    };

    /**
     * The constant MSG_C51OK.
     */
    byte[] MSG_C51OK = new byte[]{
            //,0x03

            /*(byte) 0xE1, 0x25,(byte)0x5F, 0x2A, (byte) 0x82, (byte) 0x84, (byte)0x95, (byte)0x9A, (byte)0x9C, (byte)0x9F,
            (byte)0x02, (byte)0x9F, 0x03, (byte)0x9F, 0x09, (byte)0x9F, 0x10, (byte)0x9F, 0x1A, (byte)0x9F, 0x1E, (byte)0x9F,
            0x26, (byte)0x9F, 0x27, (byte)0x9F, 0x33, (byte)0x9F, 0x34, (byte)0x9F, 0x35, (byte)0x9F, 0x36, (byte)0x9F,
            0x37, (byte)0x9F, 0x41, (byte)0x9F, 0x53, (byte)0x9F, 0x6E*/

            /*(byte)0xE1, 0x27, 0x5F, 0x2A, (byte)0x82, (byte)0x84, (byte)0x95, (byte)0x9A,
            (byte)0x9C, (byte)0x9F, 0x02, (byte)0x9F, 0x03, (byte)0x9F, 0x09, (byte)0x9F, 0x10, (byte)0x9F, 0x1A, (byte)0x9F,
            0x1E, (byte)0x9F, 0x26, (byte)0x9F, 0x27, (byte)0x9F, 0x33, (byte)0x9F, 0x34, (byte)0x9F, 0x35, (byte)0x9F,
            0x36, (byte)0x9F, 0x37, (byte)0x9F, 0x41, (byte)0x9F, 0x53, (byte)0x9F, 0x6E*/


            //0x02,
            0x43, 0x35, 0x31,                               // tipo de mensaje
            0x00, 0x4C,                                     // longitud
            (byte) 0xC1, 0x01, 0x10,                         // timeout
            (byte) 0xC1, 0x03, 0x05, 0x12, 0x30,             // fecha
            (byte) 0xC1, 0x03, 0x06, 0x34, 0x0D,             // hora
            (byte) 0xC1, 0x01, 0x01,                         // txn type 20
            (byte) 0xC1, 0x04, 0x00, 0x00, 0x04, (byte) 0xD2, // monto
            (byte) 0xC1, 0x04, 0x00, 0x00, 0x00, 0x00,       // fijo
            (byte) 0xC1, 0x02, 0x04, (byte) 0x84,             // fijo (moneda MXN)
            (byte) 0xC1, 0x01, 0x00,                         // merchant desition
            (byte) 0xE1, 0x25, 0x5F, 0x2A, (byte) 0x82, (byte) 0x84, (byte) 0x95, (byte) 0x9A,
            (byte) 0x9C, (byte) 0x9F, 0x02, (byte) 0x9F, 0x03, (byte) 0x9F, 0x09, (byte) 0x9F, 0x10, (byte) 0x9F, 0x1A, (byte) 0x9F,
            0x1E, (byte) 0x9F, 0x26, (byte) 0x9F, 0x27, (byte) 0x9F, 0x33, (byte) 0x9F, 0x34, (byte) 0x9F, 0x35, (byte) 0x9F,
            0x36, (byte) 0x9F, 0x37, (byte) 0x9F, 0x41, (byte) 0x9F, 0x53
            //,0x03
    };

    /**
     * The constant MSG_C54_STAT00_ARPC.
     */
    byte[] MSG_C54_STAT00_ARPC = new byte[]{
            0x43, 0x35, 0x34,                                           // C54
            0x01, (byte) 0x90,                                          // Timeout
            (byte) 0xC1, 0x01, 0x00,                                    // Status
            (byte) 0xC1, 0x06, 0x32, 0x43, 0x41, 0x30, 0x32, 0x35,      // Authorization code
            (byte) 0xC1, 0x02, 0x30, 0x30,                              // Response code
            (byte) 0x91, 0x0A, (byte) 0xE3, 0x59, 0x4B, (byte) 0xAA,    // Issuer Authentication Data
            (byte) 0x75, (byte) 0xC0, 0x6D, (byte) 0xFE, 0x30, 0x30,
            (byte) 0xC1, 0x03, 0x17, 0x10, 0x04,                        // Transaction Date
            (byte) 0xC1, 0x03, 0x11, 0x50, 0x00,                        // Transaction Time
            (byte) 0xE2, 0x0D, (byte) 0x9F, 0x26, (byte) 0x9F, 0x27,    // E2
            (byte) 0x9F, 0x36, (byte) 0x95, (byte) 0x9F, 0x10,
            (byte) 0x9F, 0x37, (byte) 0x9B, (byte) 0x8A
    };

    /**
     * The constant MSG_C54_APROVED.
     */
    byte[] MSG_C54_APROVED = new byte[]{

            /*0x02,
            0x43, 0x35, 0x34,
            0x00, 0x34,
            (byte) 0xC1, 0x01, 0x00,
            (byte) 0xC1, 0x06, 0x32, 0x43, 0x41, 0x30, 0x32, 0x35,
            (byte) 0xC1, 0x02, 0x30, 0x30,
            (byte) 0x91, 0x00, (byte) 0xE3, 0x59, 0x4B, (byte) 0xAA,
            0x75, (byte) 0xC0, 0x6D, (byte) 0xFE, 0x30, 0x30,
            (byte) 0xC1, 0x03, 0x05, 0x12, 0x30,
            (byte) 0xC1, 0x03, 0x10, 0x55, 0x15,
            (byte) 0xE2, 0x0D,
            (byte) 0x9F, 0x26,
            (byte) 0x9F, 0x27,
            (byte) 0x9F, 0x36, (byte) 0x95,
            (byte) 0x9F, 0x10,
            (byte) 0x9F, 0x37, (byte) 0x9B, (byte) 0x8A,
            0x03*/

            0x02,
            0x43, 0x35, 0x34,
            0x00, 0x2A,
            (byte) 0xC1, 0x01, 0x00,
            (byte) 0xC1, 0x06, 0x32, 0x43, 0x41, 0x30, 0x32, 0x35,
            (byte) 0xC1, 0x02, 0x30, 0x30,
            (byte) 0x91, 0x00,
            (byte) 0xC1, 0x03, 0x05, 0x12, 0x30,
            (byte) 0xC1, 0x03, 0x10, 0x55, 0x15,
            (byte) 0xE2, 0x0D,
            (byte) 0x9F, 0x26,
            (byte) 0x9F, 0x27,
            (byte) 0x9F, 0x36, (byte) 0x95,
            (byte) 0x9F, 0x10,
            (byte) 0x9F, 0x37, (byte) 0x9B, (byte) 0x8A,
            0x03,


    };


    /**
     * The constant MSG_C54_DES_APROVED.
     */
    byte[] MSG_C54_DES_APROVED = new byte[]{
            0x02,
            0x43, 0x35, 0x34,                                               //Identificador mensaje
            0x00, 0x2E,                                                     //Longitud de parámetros 00 30              0x01, (byte) 0x90,  0x00, 0x25,
            (byte) 0xC1, 0x01, 0x01,                                        //Status de la respuesta del Host           (byte) 0xC1, 0x01, 0x00,
            (byte) 0xC1, 0x00,                                              //Authorization Code
            //
            (byte) 0xC1, 0x02, 0x30, 0x30,                                  //Response code
            //                  12     13
            (byte) 0x91, 0x0A, (byte) 0xE3, 0x59, 0x4B, (byte) 0xAA,        //Issuer Authentication Data
            0x75, (byte) 0xC0, 0x6D, (byte) 0xFE, 0x30, 0x30,
            (byte) 0xC1, 0x03, 0x05, 0x12, 0x30,                            //Transaction Date
            //                   28     29    30
            (byte) 0xC1, 0x03, 0x10, 0x55, 0x15,                            //Transaction Time    [40,41,42]
            //                   33    34    35
            (byte) 0xE2, 0x0D,
            (byte) 0x9F, 0x26,
            (byte) 0x9F, 0x27,
            (byte) 0x9F, 0x36, (byte) 0x95,
            (byte) 0x9F, 0x10,
            (byte) 0x9F, 0x37, (byte) 0x9B, (byte) 0x8A,
            0x03
    };

    /**
     * The constant MSG_C54_STAT00_NOARPC.
     */
    byte[] MSG_C54_STAT00_NOARPC = new byte[]{
            0x43, 0x35, 0x34,
            0x00, 0x2A,
            (byte) 0xC1, 0x01, 0x00,
            (byte) 0xC1, 0x06, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
            (byte) 0xC1, 0x02, 0x39, 0x36,
            (byte) 0x91, 0x00,
            (byte) 0xC1, 0x03, 0x05, 0x12, 0x30,
            (byte) 0xC1, 0x03, 0x10, 0x55, 0x15,
            (byte) 0xE2, 0x0D, (byte) 0x9F, 0x26, (byte) 0x9F, 0x27, (byte) 0x9F, 0x36, (byte) 0x95, (byte) 0x9F, 0x10, (byte) 0x9F, 0x37, (byte) 0x9B, (byte) 0x8A
    };

    /**
     * The constant MSG_C54_STAT01.
     */
    byte[] MSG_C54_STAT01 = new byte[]{
            0x43, 0x35, 0x34,                       // C54
            0x00, 0x24,                             // Timeout
            (byte) 0xC1, 0x01, 0x01,                // Status
            (byte) 0xC1, 0x00,                      // Authorization code
            (byte) 0xC1, 0x02, 0x30, 0x31,          // Response code
            (byte) 0x91, 0x00,                      // Issuer Authentication Data
            (byte) 0xC1, 0x03, 0x05, 0x12, 0x30,    // Transaction Date
            (byte) 0xC1, 0x03, 0x10, 0x55, 0x15,    // Transaction Time
            (byte) 0xE2, 0x0D, (byte) 0x9F, 0x26,   // E2
            (byte) 0x9F, 0x27, (byte) 0x9F, 0x36, (byte) 0x95, (byte) 0x9F, 0x10,
            (byte) 0x9F, 0x37, (byte) 0x9B, (byte) 0x8A
    };

    /**
     * The constant MSG_C54_NO_HOST_RESPONSE.
     */
    byte[] MSG_C54_NO_HOST_RESPONSE = new byte[]{
            0x43, 0x35, 0x34,
            0x00, 0x22,
            (byte) 0xC1, 0x01, 0x02,
            (byte) 0xC1, 0x00,
            (byte) 0xC1, 0x00,
            (byte) 0x91, 0x00,
            (byte) 0xC1, 0x03, 0x05, 0x10, 0x19,
            (byte) 0xC1, 0x03, 0x05, 0x34, 0x19,
            (byte) 0xE2, 0x0D, (byte) 0x9F, 0x26, (byte) 0x9F,
            0x27, (byte) 0x9F, 0x36, (byte) 0x95, (byte) 0x9F,
            0x10, (byte) 0x9F, 0x37, (byte) 0x9B, (byte) 0x8A
    };

    /**
     * The constant MSG_C54_ABORTED.
     */
    byte[] MSG_C54_ABORTED = new byte[]{
            0x02,
            0x43, 0x35, 0x34,
            0x00, 0x0F,
            (byte) 0xC1, 0x01, 0x03,
            (byte) 0xC1, 0x00,
            (byte) 0xC1, 0x00,
            (byte) 0x91, 0x00,
            (byte) 0xC1, 0x00,
            (byte) 0xC1, 0x00,
            (byte) 0xE2, 0x00,
            0x03,
            (byte) 0xFE
    };

    /**
     * The constant MSG_C25_71.
     */
    byte[] MSG_C25_71 = new byte[]{
            0x43, 0x32, 0x35,   // C25
            0x37, 0x32,         // 71
            0x31,               // 1
            0x30, 0x31,         // No de scripts 1
            0x30, 0x32, 0x35,  // Longitud script (25 [* 2])
            0x37, 0x32, 0x31, 0x37, 0x39, 0x66, 0x31, 0x38, // Script
            0x30, 0x34, 0x30, 0x38, 0x32, 0x32, 0x30, 0x30,
            0x33, 0x35, 0x38, 0x36, 0x30, 0x65, 0x30, 0x34,
            0x64, 0x61, 0x39, 0x66, 0x35, 0x38, 0x30, 0x39,
            0x30, 0x33, 0x33, 0x61, 0x36, 0x34, 0x62, 0x39,
            0x36, 0x65, 0x39, 0x32, 0x31, 0x62, 0x34, 0x61,
            0x64, 0x36
    };

}
